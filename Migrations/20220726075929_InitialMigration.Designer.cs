// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace exchange_rate_hangfire.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220726075929_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entites.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f973d74b-b7df-40a6-a530-017dcdd870e7"),
                            Code = "USD",
                            Name = "Dolar"
                        },
                        new
                        {
                            Id = new Guid("ec00761e-9ed7-49fd-841b-1b86cfb4e58c"),
                            Code = "EUR",
                            Name = "Euro"
                        },
                        new
                        {
                            Id = new Guid("ef0061b8-45a6-42d4-8aaf-7f4d002b7295"),
                            Code = "GBP",
                            Name = "Ingiliz Poundu"
                        },
                        new
                        {
                            Id = new Guid("fefd1d40-48c4-492a-83df-f6b605fcef26"),
                            Code = "AUD",
                            Name = "Avustralya Doları"
                        },
                        new
                        {
                            Id = new Guid("078d66fd-cbb2-4b19-bcce-40c7150c7a8e"),
                            Code = "CAD",
                            Name = "Kanada Doları"
                        },
                        new
                        {
                            Id = new Guid("51f045e1-ab39-4eb9-9c3a-493cf018f0f2"),
                            Code = "SAR",
                            Name = "Suudi Riyali"
                        });
                });

            modelBuilder.Entity("Domain.Entites.CurrencyExchange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyExchanges");
                });

            modelBuilder.Entity("Domain.Entites.CurrencyExchange", b =>
                {
                    b.HasOne("Domain.Entites.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });
#pragma warning restore 612, 618
        }
    }
}
